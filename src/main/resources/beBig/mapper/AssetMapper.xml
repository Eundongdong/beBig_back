<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="beBig.mapper.AssetMapper">
    <!--계좌별 현금 잔액 합산-->
<!--    <select id="findCurrentBalanceByAccountType" parameterType="map" resultType="long">-->
<!--        SELECT t.transaction_balance-->
<!--        FROM transaction t-->
<!--        JOIN account a ON t.account_num = a.account_num-->
<!--        WHERE a.user_id = #{userId}-->
<!--        AND a.account_type = #{accountType}-->
<!--        ORDER BY t.transaction_date DESC-->
<!--            LIMIT 1-->
<!--    </select>-->

    <!-- userId로 계좌 정보를 조회하는 쿼리  -->
    <select id="findAccountNumByUserId" parameterType="long" resultType="string">
        SELECT account_num
        FROM account
        WHERE user_id = #{userId}
    </select>

    <select id="findAccountTypeByAccountNum" parameterType="string" resultType="string">
        SELECT account_type
        FROM account
        WHERE account_num = #{accountNum}
    </select>
    <!-- 최근 입금/출금 거래 내역 잔액 조회 -->
    <select id="showLatestCashBalance" parameterType="map" resultType="Long">
        SELECT t.transaction_balance
        FROM transaction t
        JOIN account a ON t.account_num = a.account_num
        WHERE t.account_num = #{accountNum}
        AND a.account_type = '11'
        AND t.transaction_type IN ('입금', '출금')
        ORDER BY t.transaction_date DESC
        LIMIT 1
    </select>

    <!-- 최근 예금/적금 거래 내역 잔액 조회 -->
    <select id="showLatestDepositBalance" parameterType="map" resultType="Long">
        SELECT t.transaction_balance
        FROM transaction t
        JOIN account a ON t.account_num = a.account_num
        WHERE t.account_num = #{accountNum}
        AND a.account_type = '12'
        AND t.transaction_type IN ('입금', '출금')
        ORDER BY t.transaction_date DESC
        LIMIT 1
    </select>

    <select id="showLatestEtcBalance" parameterType="map" resultType="Long">
        SELECT t.transaction_balance
        FROM transaction t
        JOIN account a ON t.account_num = a.account_num
        WHERE t.account_num = #{accountNum}
        AND a.account_type = '14'
        AND t.transaction_type IN ('입금', '출금')
        ORDER BY t.transaction_date DESC
        LIMIT 1
    </select>
    <!-- accountNum으로 Transaction 출금 정보를 조회하는 쿼리 -->
    <!-- 출금만 가져옴-->
    <select id="findTransactionsByAccountNum" resultType="TransactionVo">
        SELECT *
        FROM transaction JOIN account ON transaction.account_num = account.account_num
        WHERE transaction.account_num = #{accountNum}
        AND transaction.transaction_type='출금'
    </select>

    <!-- List<accountNum>에 있는 잔액의 총 합을 가져오는 쿼리-->
    <select id="findTotalAssetsByAccountNum" resultType="long" parameterType="list">
        SELECT sum(transaction_balance) as balance
        FROM transaction
        WHERE account_num IN
        <foreach item="accountNum" collection="list" open="(" separator="," close=")">
            #{accountNum}
        </foreach>
        AND transaction_date = (
        SELECT MAX(transaction_date)
        FROM transaction t2
        WHERE t2.account_num = transaction.account_num
        )
    </select>


    <!-- 나이대별 총 자산 계산 -->
    <select id="findTotalAssetsByAgeRange" resultType="beBig.dto.UserTotalAssetsDto" parameterType="int">
        SELECT
            u.user_id,
            SUM(t.transaction_balance) AS totalAssets,
            u.user_age_range
        FROM user u
                 JOIN account a ON u.user_id = a.user_id
                 JOIN transaction t ON a.account_num = t.account_num
        WHERE u.user_age_range = #{ageRange}
        GROUP BY u.user_id
        ORDER BY totalAssets DESC
    </select>

    <!-- 특정 유저의 계좌 번호 리스트 조회 -->
    <select id="findAccountNumByPartUserId" resultType="beBig.vo.AccountVo" parameterType="long">
        SELECT account_num, bank_id, account_name, account_type
        FROM account
        WHERE user_id = #{userId}
    </select>

    <!-- 특정 유저 정보 조회 -->
    <select id="findUserByUserId" resultType="beBig.vo.UserVo" parameterType="long">
        SELECT *
        FROM user
        WHERE user_id = #{userId}
    </select>

    <!-- 동일한 나이대의 유저 리스트 조회 -->
    <select id="findUserWithSameAgeRange" resultType="beBig.vo.UserVo" parameterType="int">
        SELECT *
        FROM user
        WHERE user_age_range = #{ageRange}
    </select>


    <select id="findUserBalance" resultType="beBig.vo.AssetUserBalanceVo" parameterType="long">
        WITH LatestTransactions AS (
            SELECT
                t.account_num,
                t.transaction_balance,
                ROW_NUMBER() OVER (PARTITION BY t.account_num ORDER BY t.transaction_date DESC) AS rn
            FROM transaction t
        )
        SELECT
            u.user_id,
            COALESCE(u.user_age_range, 0) AS user_age_range,
            COALESCE(SUM(lt.transaction_balance), 0) AS total_balance
        FROM user u
                 LEFT JOIN account a
                           ON u.user_id = a.user_id
                 LEFT JOIN LatestTransactions lt
                           ON a.account_num = lt.account_num
        WHERE u.user_age_range = (SELECT user_age_range FROM user WHERE user_id = #{userId})
          AND (lt.rn = 1 OR lt.rn IS NULL)
        GROUP BY u.user_id, u.user_age_range
        ORDER BY total_balance desc, u.user_id
    </select>
</mapper>